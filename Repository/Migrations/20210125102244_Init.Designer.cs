// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20210125102244_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Repository.Domain.FileInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<string>("ChangedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(248);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("FileSize")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<int?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MapPath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<int>("Shared")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("FileInfo");
                });

            modelBuilder.Entity("Repository.Domain.FileTypes", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<string>("ChangedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileExts")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<int?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FileType");
                });

            modelBuilder.Entity("Repository.Domain.SharedFileInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<string>("ChangedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<int?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OwnerName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("SharedFileInfo");
                });

            modelBuilder.Entity("Repository.Domain.UserDataInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cap")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("ChangedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("FolderPath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT")
                        .HasMaxLength(233);

                    b.Property<string>("Stored")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("UserAccount")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserAccount")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("UserDataInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
